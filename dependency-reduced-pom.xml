<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <parent>
    <artifactId>common</artifactId>
    <groupId>io.confluent</groupId>
    <version>6.0.0</version>
    <relativePath>../pom.xml/pom.xml</relativePath>
  </parent>
  <modelVersion>4.0.0</modelVersion>
  <groupId>io.confluent</groupId>
  <artifactId>kafka-connect-jdbc</artifactId>
  <name>kafka-connect-jdbc</name>
  <version>10.8.0-SNAPSHOT</version>
  <description>A Kafka Connect JDBC connector for copying data between databases and Kafka.</description>
  <url>http://confluent.io</url>
  <licenses>
    <license>
      <name>Confluent Community License</name>
      <url>https://www.confluent.io/confluent-community-license</url>
      <distribution>repo</distribution>
    </license>
  </licenses>
  <scm>
    <connection>scm:git:git://github.com/confluentinc/kafka-connect-jdbc.git</connection>
    <developerConnection>scm:git:git@github.com:confluentinc/kafka-connect-jdbc.git</developerConnection>
    <url>https://github.com/confluentinc/kafka-connect-jdbc</url>
  </scm>
  <organization>
    <name>Confluent, Inc.</name>
    <url>http://confluent.io</url>
  </organization>
  <build>
    <resources>
      <resource>
        <filtering>true</filtering>
        <directory>src/main/resources</directory>
      </resource>
    </resources>
    <plugins>
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <inherited>true</inherited>
        <configuration>
          <compilerArgs>
            <arg>-Xlint:all</arg>
            <arg>-Werror</arg>
          </compilerArgs>
        </configuration>
      </plugin>
      <plugin>
        <groupId>io.confluent</groupId>
        <artifactId>kafka-connect-maven-plugin</artifactId>
        <version>${kafka.connect.maven.plugin.version}</version>
        <executions>
          <execution>
            <goals>
              <goal>kafka-connect</goal>
            </goals>
            <configuration>
              <title>Kafka Connect JDBC</title>
              <documentationUrl>https://docs.confluent.io/kafka-connect-jdbc/current/</documentationUrl>
              <description>The JDBC source and sink connectors allow you to exchange data between relational databases and Kafka.

                                The JDBC source connector allows you to import data from any relational database with a JDBC driver into Kafka topics. By using JDBC, this connector can support a wide variety of databases without requiring custom code for each one.

                                Data is loaded by periodically executing a SQL query and creating an output record for each row in the result set. By default, all tables in a database are copied, each to its own output topic. The database is monitored for new or deleted tables and adapts automatically. When copying data from a table, the connector can load only new or modified rows by specifying which columns should be used to detect new or modified data.

                                The JDBC sink connector allows you to export data from Kafka topics to any relational database with a JDBC driver. By using JDBC, this connector can support a wide variety of databases without requiring a dedicated connector for each one. The connector polls data from Kafka to write to the database based on the topics subscription. It is possible to achieve idempotent writes with upserts. Auto-creation of tables, and limited auto-evolution is also supported.</description>
              <logo>logos/jdbc.jpg</logo>
              <supportProviderName>Confluent, Inc.</supportProviderName>
              <supportSummary>Confluent supports the JDBC sink and source connectors alongside community members as part of its Confluent Platform offering.</supportSummary>
              <supportUrl>https://docs.confluent.io/current/</supportUrl>
              <supportLogo>logos/confluent.png</supportLogo>
              <ownerUsername>confluentinc</ownerUsername>
              <ownerType>organization</ownerType>
              <ownerName>Confluent, Inc.</ownerName>
              <ownerUrl>https://confluent.io/</ownerUrl>
              <ownerLogo>logos/confluent.png</ownerLogo>
              <dockerNamespace>confluentinc</dockerNamespace>
              <dockerName>cp-kafka-connect</dockerName>
              <dockerTag>${project.version}</dockerTag>
              <componentTypes>
                <componentType>sink</componentType>
                <componentType>source</componentType>
              </componentTypes>
              <tags>
                <tag>jdbc</tag>
                <tag>database</tag>
                <tag>dbms</tag>
                <tag>rdbms</tag>
                <tag>sql</tag>
                <tag>mysql</tag>
                <tag>postgresql</tag>
                <tag>oracle</tag>
                <tag>sql server</tag>
                <tag>db2</tag>
                <tag>sybase</tag>
                <tag>vertica</tag>
                <tag>sap hana</tag>
                <tag>derby</tag>
                <tag>sqlite</tag>
              </tags>
              <confluentControlCenterIntegration>true</confluentControlCenterIntegration>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <trimStackTrace>false</trimStackTrace>
          <skipTests>true</skipTests>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-failsafe-plugin</artifactId>
        <executions>
          <execution>
            <id>integration-test</id>
            <configuration>
              <excludes>
                <exclude>**/*OOM*.java</exclude>
              </excludes>
              <trimStackTrace>false</trimStackTrace>
              <skipTests>true</skipTests>
            </configuration>
          </execution>
          <execution>
            <id>integration-test-memory-restricted</id>
            <goals>
              <goal>integration-test</goal>
            </goals>
            <configuration>
              <argLine>@{argLine} -Djava.awt.headless=true -Xmx128M</argLine>
              <includes>
                <include>**/*OOM*.java</include>
              </includes>
              <trimStackTrace>false</trimStackTrace>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-assembly-plugin</artifactId>
        <version>2.6</version>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
            <configuration>
              <archive>
                <manifest />
              </archive>
              <descriptorRefs>
                <descriptorRef>jar-with-dependencies</descriptorRef>
              </descriptorRefs>
              <skipAssembly>false</skipAssembly>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-shade-plugin</artifactId>
        <version>3.4.1</version>
        <executions>
          <execution>
            <goals>
              <goal>shade</goal>
            </goals>
            <configuration>
              <shadedArtifactAttached>true</shadedArtifactAttached>
              <transformers>
                <transformer />
              </transformers>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <executions>
          <execution>
            <id>validate</id>
            <phase>validate</phase>
            <goals>
              <goal>check</goal>
            </goals>
            <configuration>
              <suppressionsLocation>checkstyle/suppressions.xml</suppressionsLocation>
              <skip>true</skip>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-release-plugin</artifactId>
        <version>${maven.release.plugin.version}</version>
        <configuration>
          <autoVersionSubmodules>true</autoVersionSubmodules>
          <remoteTagging>false</remoteTagging>
          <tagNameFormat>v@{project.version}</tagNameFormat>
        </configuration>
      </plugin>
    </plugins>
  </build>
  <profiles>
    <profile>
      <id>rpm</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>rpm-maven-plugin</artifactId>
            <version>2.1.5</version>
            <executions>
              <execution>
                <id>generate-rpm</id>
                <goals>
                  <goal>rpm</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <group>Applications/Internet</group>
              <packager>Confluent Packaging</packager>
              <license>${licenses.name}</license>
              <needarch>noarch</needarch>
              <targetOS>linux</targetOS>
              <requires>
                <require>confluent-common = ${confluent.version}</require>
              </requires>
              <mappings>
                <mapping>
                  <directory>/usr/share/java/${project.artifactId}</directory>
                  <sources>
                    <source>
                      <location>${project.package.home}/share/java/${project.artifactId}</location>
                    </source>
                  </sources>
                </mapping>
                <mapping>
                  <configuration>true</configuration>
                  <directory>/etc/${project.artifactId}</directory>
                  <sources>
                    <source>
                      <location>${project.package.home}/etc/${project.artifactId}</location>
                    </source>
                  </sources>
                </mapping>
                <mapping>
                  <documentation>true</documentation>
                  <directory>/usr/share/doc/${project.artifactId}</directory>
                  <sources>
                    <source>
                      <location>${project.package.home}/share/doc/${project.artifactId}</location>
                    </source>
                  </sources>
                </mapping>
              </mappings>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>standalone</id>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-assembly-plugin</artifactId>
            <configuration>
              <descriptors>
                <descriptor>src/assembly/standalone.xml</descriptor>
              </descriptors>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>licenses-package</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <version>1.2.1</version>
            <executions>
              <execution>
                <id>create-licenses</id>
                <phase>package</phase>
                <goals>
                  <goal>java</goal>
                </goals>
                <configuration>
                  <mainClass>io.confluent.licenses.LicenseFinder</mainClass>
                  <arguments>
                    <argument>-i ${project.build.directory}/${project.build.finalName}-package/share/java/kafka-connect-jdbc</argument>
                    <argument>-o ${project.basedir}/licenses</argument>
                    <argument>-f</argument>
                    <argument>-h ${project.build.directory}/${project.build.finalName}-package/share/doc/kafka-connect-jdbc/licenses.html</argument>
                    <argument>-l ${project.build.directory}/${project.build.finalName}-package/share/doc/kafka-connect-jdbc/licenses</argument>
                    <argument>-n ${project.build.directory}/${project.build.finalName}-package/share/doc/kafka-connect-jdbc/notices</argument>
                    <argument>-t ${project.name}</argument>
                    <argument>-x licenses-${confluent.version}.jar</argument>
                  </arguments>
                </configuration>
              </execution>
            </executions>
            <dependencies>
              <dependency>
                <groupId>io.confluent</groupId>
                <artifactId>licenses</artifactId>
                <version>${confluent.version}</version>
              </dependency>
            </dependencies>
            <configuration>
              <includeProjectDependencies>true</includeProjectDependencies>
              <includePluginDependencies>true</includePluginDependencies>
              <executableDependency>
                <groupId>io.confluent</groupId>
                <artifactId>licenses</artifactId>
              </executableDependency>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>licenses-source</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <version>1.2.1</version>
            <executions>
              <execution>
                <id>create-licenses</id>
                <phase>package</phase>
                <goals>
                  <goal>java</goal>
                </goals>
                <configuration>
                  <mainClass>io.confluent.licenses.LicenseFinder</mainClass>
                  <arguments>
                    <argument>-i ${project.build.directory}/${project.build.finalName}-development/share/java/kafka-connect-jdbc</argument>
                    <argument>-o ${project.basedir}/licenses</argument>
                    <argument>-f</argument>
                    <argument>-h ${project.basedir}/licenses.html</argument>
                    <argument>-l ${project.basedir}/licenses</argument>
                    <argument>-n ${project.basedir}/notices</argument>
                    <argument>-t ${project.name}</argument>
                    <argument>-x licenses-${confluent.version}.jar</argument>
                  </arguments>
                </configuration>
              </execution>
            </executions>
            <dependencies>
              <dependency>
                <groupId>io.confluent</groupId>
                <artifactId>licenses</artifactId>
                <version>${confluent.version}</version>
              </dependency>
            </dependencies>
            <configuration>
              <includeProjectDependencies>true</includeProjectDependencies>
              <includePluginDependencies>true</includePluginDependencies>
              <executableDependency>
                <groupId>io.confluent</groupId>
                <artifactId>licenses</artifactId>
              </executableDependency>
            </configuration>
          </plugin>
          <plugin>
            <artifactId>maven-clean-plugin</artifactId>
            <version>3.0.0</version>
            <configuration>
              <filesets>
                <fileset>
                  <directory>.</directory>
                  <includes>
                    <include>licenses.html</include>
                    <directory>licenses/*.*</directory>
                    <directory>notices/*.*</directory>
                  </includes>
                  <excludes>
                    <exclude>licenses/LICENSE-ojdbc*.txt</exclude>
                    <exclude>licenses/LICENSE-mssql-jdbc-*.txt</exclude>
                  </excludes>
                </fileset>
              </filesets>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
  <repositories>
    <repository>
      <id>confluent</id>
      <name>Confluent</name>
      <url>https://packages.confluent.io/maven/</url>
    </repository>
  </repositories>
  <pluginRepositories>
    <pluginRepository>
      <id>confluent</id>
      <name>Confluent</name>
      <url>https://packages.confluent.io/maven/</url>
    </pluginRepository>
  </pluginRepositories>
  <dependencies>
    <dependency>
      <groupId>org.apache.kafka</groupId>
      <artifactId>connect-api</artifactId>
      <version>6.0.0-ccs</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.kafka</groupId>
      <artifactId>connect-runtime</artifactId>
      <version>6.0.0-ccs</version>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <artifactId>slf4j-log4j12</artifactId>
          <groupId>org.slf4j</groupId>
        </exclusion>
        <exclusion>
          <artifactId>kafka-tools</artifactId>
          <groupId>org.apache.kafka</groupId>
        </exclusion>
        <exclusion>
          <artifactId>connect-json</artifactId>
          <groupId>org.apache.kafka</groupId>
        </exclusion>
        <exclusion>
          <artifactId>connect-transforms</artifactId>
          <groupId>org.apache.kafka</groupId>
        </exclusion>
        <exclusion>
          <artifactId>jackson-jaxrs-json-provider</artifactId>
          <groupId>com.fasterxml.jackson.jaxrs</groupId>
        </exclusion>
        <exclusion>
          <artifactId>jersey-container-servlet</artifactId>
          <groupId>org.glassfish.jersey.containers</groupId>
        </exclusion>
        <exclusion>
          <artifactId>jersey-hk2</artifactId>
          <groupId>org.glassfish.jersey.inject</groupId>
        </exclusion>
        <exclusion>
          <artifactId>jaxb-api</artifactId>
          <groupId>javax.xml.bind</groupId>
        </exclusion>
        <exclusion>
          <artifactId>activation</artifactId>
          <groupId>javax.activation</groupId>
        </exclusion>
        <exclusion>
          <artifactId>jetty-server</artifactId>
          <groupId>org.eclipse.jetty</groupId>
        </exclusion>
        <exclusion>
          <artifactId>jetty-servlet</artifactId>
          <groupId>org.eclipse.jetty</groupId>
        </exclusion>
        <exclusion>
          <artifactId>jetty-servlets</artifactId>
          <groupId>org.eclipse.jetty</groupId>
        </exclusion>
        <exclusion>
          <artifactId>jetty-client</artifactId>
          <groupId>org.eclipse.jetty</groupId>
        </exclusion>
        <exclusion>
          <artifactId>reflections</artifactId>
          <groupId>org.reflections</groupId>
        </exclusion>
        <exclusion>
          <artifactId>maven-artifact</artifactId>
          <groupId>org.apache.maven</groupId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.13</version>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <artifactId>hamcrest-core</artifactId>
          <groupId>org.hamcrest</groupId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.easymock</groupId>
      <artifactId>easymock</artifactId>
      <version>4.0.1</version>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <artifactId>objenesis</artifactId>
          <groupId>org.objenesis</groupId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.powermock</groupId>
      <artifactId>powermock-module-junit4</artifactId>
      <version>2.0.0</version>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <artifactId>powermock-module-junit4-common</artifactId>
          <groupId>org.powermock</groupId>
        </exclusion>
        <exclusion>
          <artifactId>hamcrest-core</artifactId>
          <groupId>org.hamcrest</groupId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.powermock</groupId>
      <artifactId>powermock-api-easymock</artifactId>
      <version>2.0.0</version>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <artifactId>powermock-api-support</artifactId>
          <groupId>org.powermock</groupId>
        </exclusion>
        <exclusion>
          <artifactId>cglib-nodep</artifactId>
          <groupId>cglib</groupId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.apache.derby</groupId>
      <artifactId>derby</artifactId>
      <version>10.14.2.0</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <version>2.4</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-all</artifactId>
      <version>1.10.19</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-reload4j</artifactId>
      <version>1.7.36</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>ch.qos.reload4j</groupId>
      <artifactId>reload4j</artifactId>
      <version>1.2.19</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.zonky.test</groupId>
      <artifactId>embedded-postgres</artifactId>
      <version>1.2.6</version>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <artifactId>embedded-postgres-binaries-windows-amd64</artifactId>
          <groupId>io.zonky.test.postgres</groupId>
        </exclusion>
        <exclusion>
          <artifactId>embedded-postgres-binaries-darwin-amd64</artifactId>
          <groupId>io.zonky.test.postgres</groupId>
        </exclusion>
        <exclusion>
          <artifactId>embedded-postgres-binaries-linux-amd64</artifactId>
          <groupId>io.zonky.test.postgres</groupId>
        </exclusion>
        <exclusion>
          <artifactId>embedded-postgres-binaries-linux-amd64-alpine</artifactId>
          <groupId>io.zonky.test.postgres</groupId>
        </exclusion>
        <exclusion>
          <artifactId>commons-lang3</artifactId>
          <groupId>org.apache.commons</groupId>
        </exclusion>
        <exclusion>
          <artifactId>commons-compress</artifactId>
          <groupId>org.apache.commons</groupId>
        </exclusion>
        <exclusion>
          <artifactId>xz</artifactId>
          <groupId>org.tukaani</groupId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>ch.vorburger.mariaDB4j</groupId>
      <artifactId>mariaDB4j</artifactId>
      <version>2.4.0</version>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <artifactId>mariaDB4j-core</artifactId>
          <groupId>ch.vorburger.mariaDB4j</groupId>
        </exclusion>
        <exclusion>
          <artifactId>mariaDB4j-db-linux64</artifactId>
          <groupId>ch.vorburger.mariaDB4j</groupId>
        </exclusion>
        <exclusion>
          <artifactId>mariaDB4j-db-win32</artifactId>
          <groupId>ch.vorburger.mariaDB4j</groupId>
        </exclusion>
        <exclusion>
          <artifactId>mariaDB4j-db-mac64</artifactId>
          <groupId>ch.vorburger.mariaDB4j</groupId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.mariadb.jdbc</groupId>
      <artifactId>mariadb-java-client</artifactId>
      <version>2.5.4</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.kafka</groupId>
      <artifactId>connect-runtime</artifactId>
      <version>6.0.0-ccs</version>
      <type>test-jar</type>
      <classifier>test</classifier>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <artifactId>kafka-tools</artifactId>
          <groupId>org.apache.kafka</groupId>
        </exclusion>
        <exclusion>
          <artifactId>connect-json</artifactId>
          <groupId>org.apache.kafka</groupId>
        </exclusion>
        <exclusion>
          <artifactId>connect-transforms</artifactId>
          <groupId>org.apache.kafka</groupId>
        </exclusion>
        <exclusion>
          <artifactId>jackson-jaxrs-json-provider</artifactId>
          <groupId>com.fasterxml.jackson.jaxrs</groupId>
        </exclusion>
        <exclusion>
          <artifactId>jersey-container-servlet</artifactId>
          <groupId>org.glassfish.jersey.containers</groupId>
        </exclusion>
        <exclusion>
          <artifactId>jersey-hk2</artifactId>
          <groupId>org.glassfish.jersey.inject</groupId>
        </exclusion>
        <exclusion>
          <artifactId>jaxb-api</artifactId>
          <groupId>javax.xml.bind</groupId>
        </exclusion>
        <exclusion>
          <artifactId>activation</artifactId>
          <groupId>javax.activation</groupId>
        </exclusion>
        <exclusion>
          <artifactId>jetty-server</artifactId>
          <groupId>org.eclipse.jetty</groupId>
        </exclusion>
        <exclusion>
          <artifactId>jetty-servlet</artifactId>
          <groupId>org.eclipse.jetty</groupId>
        </exclusion>
        <exclusion>
          <artifactId>jetty-servlets</artifactId>
          <groupId>org.eclipse.jetty</groupId>
        </exclusion>
        <exclusion>
          <artifactId>jetty-client</artifactId>
          <groupId>org.eclipse.jetty</groupId>
        </exclusion>
        <exclusion>
          <artifactId>reflections</artifactId>
          <groupId>org.reflections</groupId>
        </exclusion>
        <exclusion>
          <artifactId>maven-artifact</artifactId>
          <groupId>org.apache.maven</groupId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.apache.kafka</groupId>
      <artifactId>kafka_2.13</artifactId>
      <version>6.0.0-ccs</version>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <artifactId>slf4j-log4j12</artifactId>
          <groupId>org.slf4j</groupId>
        </exclusion>
        <exclusion>
          <artifactId>jackson-module-scala_2.13</artifactId>
          <groupId>com.fasterxml.jackson.module</groupId>
        </exclusion>
        <exclusion>
          <artifactId>jackson-dataformat-csv</artifactId>
          <groupId>com.fasterxml.jackson.dataformat</groupId>
        </exclusion>
        <exclusion>
          <artifactId>jackson-datatype-jdk8</artifactId>
          <groupId>com.fasterxml.jackson.datatype</groupId>
        </exclusion>
        <exclusion>
          <artifactId>jopt-simple</artifactId>
          <groupId>net.sf.jopt-simple</groupId>
        </exclusion>
        <exclusion>
          <artifactId>metrics-core</artifactId>
          <groupId>com.yammer.metrics</groupId>
        </exclusion>
        <exclusion>
          <artifactId>scala-collection-compat_2.13</artifactId>
          <groupId>org.scala-lang.modules</groupId>
        </exclusion>
        <exclusion>
          <artifactId>scala-java8-compat_2.13</artifactId>
          <groupId>org.scala-lang.modules</groupId>
        </exclusion>
        <exclusion>
          <artifactId>scala-library</artifactId>
          <groupId>org.scala-lang</groupId>
        </exclusion>
        <exclusion>
          <artifactId>scala-reflect</artifactId>
          <groupId>org.scala-lang</groupId>
        </exclusion>
        <exclusion>
          <artifactId>scala-logging_2.13</artifactId>
          <groupId>com.typesafe.scala-logging</groupId>
        </exclusion>
        <exclusion>
          <artifactId>commons-cli</artifactId>
          <groupId>commons-cli</groupId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.apache.kafka</groupId>
      <artifactId>kafka_2.13</artifactId>
      <version>6.0.0-ccs</version>
      <type>test-jar</type>
      <classifier>test</classifier>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <artifactId>jackson-module-scala_2.13</artifactId>
          <groupId>com.fasterxml.jackson.module</groupId>
        </exclusion>
        <exclusion>
          <artifactId>jackson-dataformat-csv</artifactId>
          <groupId>com.fasterxml.jackson.dataformat</groupId>
        </exclusion>
        <exclusion>
          <artifactId>jackson-datatype-jdk8</artifactId>
          <groupId>com.fasterxml.jackson.datatype</groupId>
        </exclusion>
        <exclusion>
          <artifactId>jopt-simple</artifactId>
          <groupId>net.sf.jopt-simple</groupId>
        </exclusion>
        <exclusion>
          <artifactId>metrics-core</artifactId>
          <groupId>com.yammer.metrics</groupId>
        </exclusion>
        <exclusion>
          <artifactId>scala-collection-compat_2.13</artifactId>
          <groupId>org.scala-lang.modules</groupId>
        </exclusion>
        <exclusion>
          <artifactId>scala-java8-compat_2.13</artifactId>
          <groupId>org.scala-lang.modules</groupId>
        </exclusion>
        <exclusion>
          <artifactId>scala-library</artifactId>
          <groupId>org.scala-lang</groupId>
        </exclusion>
        <exclusion>
          <artifactId>scala-reflect</artifactId>
          <groupId>org.scala-lang</groupId>
        </exclusion>
        <exclusion>
          <artifactId>scala-logging_2.13</artifactId>
          <groupId>com.typesafe.scala-logging</groupId>
        </exclusion>
        <exclusion>
          <artifactId>commons-cli</artifactId>
          <groupId>commons-cli</groupId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.apache.kafka</groupId>
      <artifactId>kafka-clients</artifactId>
      <version>6.0.0-ccs</version>
      <type>test-jar</type>
      <classifier>test</classifier>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>testcontainers</artifactId>
      <version>1.17.3</version>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <artifactId>duct-tape</artifactId>
          <groupId>org.rnorth.duct-tape</groupId>
        </exclusion>
        <exclusion>
          <artifactId>docker-java-api</artifactId>
          <groupId>com.github.docker-java</groupId>
        </exclusion>
        <exclusion>
          <artifactId>docker-java-transport-zerodep</artifactId>
          <groupId>com.github.docker-java</groupId>
        </exclusion>
        <exclusion>
          <artifactId>commons-compress</artifactId>
          <groupId>org.apache.commons</groupId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>oracle-xe</artifactId>
      <version>1.17.3</version>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <artifactId>jdbc</artifactId>
          <groupId>org.testcontainers</groupId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>postgresql</artifactId>
      <version>1.17.3</version>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <artifactId>jdbc</artifactId>
          <groupId>org.testcontainers</groupId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>com.101tec</groupId>
      <artifactId>zkclient</artifactId>
      <version>0.11</version>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <artifactId>slf4j-log4j12</artifactId>
          <groupId>org.slf4j</groupId>
        </exclusion>
        <exclusion>
          <artifactId>log4j</artifactId>
          <groupId>log4j</groupId>
        </exclusion>
        <exclusion>
          <artifactId>zookeeper</artifactId>
          <groupId>org.apache.zookeeper</groupId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.apache.zookeeper</groupId>
      <artifactId>zookeeper</artifactId>
      <version>3.5.8</version>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <artifactId>slf4j-log4j12</artifactId>
          <groupId>org.slf4j</groupId>
        </exclusion>
        <exclusion>
          <artifactId>log4j</artifactId>
          <groupId>log4j</groupId>
        </exclusion>
        <exclusion>
          <artifactId>zookeeper-jute</artifactId>
          <groupId>org.apache.zookeeper</groupId>
        </exclusion>
        <exclusion>
          <artifactId>audience-annotations</artifactId>
          <groupId>org.apache.yetus</groupId>
        </exclusion>
        <exclusion>
          <artifactId>netty-handler</artifactId>
          <groupId>io.netty</groupId>
        </exclusion>
        <exclusion>
          <artifactId>netty-transport-native-epoll</artifactId>
          <groupId>io.netty</groupId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>io.confluent</groupId>
      <artifactId>assembly-plugin-boilerplate</artifactId>
      <version>6.0.0</version>
      <type>zip</type>
      <classifier>resources</classifier>
      <scope>provided</scope>
    </dependency>
  </dependencies>
  <properties>
    <reload4j.version>1.2.19</reload4j.version>
    <sqlite-jdbc.version>3.25.2</sqlite-jdbc.version>
    <licenses.name>Confluent Community License</licenses.name>
    <jtds.driver.version>1.3.1</jtds.driver.version>
    <oracle.jdbc.driver.version>19.7.0.0</oracle.jdbc.driver.version>
    <slf4j.version>1.7.36</slf4j.version>
    <maven.release.plugin.version>2.5.3</maven.release.plugin.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <commons-io.version>2.4</commons-io.version>
    <log4j.sl4j.impl.version>2.13.3</log4j.sl4j.impl.version>
    <project.package.home>target/${project.artifactId}-${project.version}-package</project.package.home>
    <mssqlserver.jdbc.driver.version>8.4.1.jre8</mssqlserver.jdbc.driver.version>
    <log4j.core.version>2.13.3</log4j.core.version>
    <derby.version>10.14.2.0</derby.version>
    <testcontainers.version>1.17.3</testcontainers.version>
    <kafka.connect.maven.plugin.version>0.11.1</kafka.connect.maven.plugin.version>
    <postgresql.version>42.4.3</postgresql.version>
    <log4j.api.version>2.13.3</log4j.api.version>
  </properties>
</project>
